#include <iostream>
#include "text_ranker.h"
#include <fstream>
#include <sstream>
#include <string>

std::string loadTextFile(const std::string& filename) {
	std::ifstream file(filename);
	std::stringstream buffer;
	buffer << file.rdbuf();
	return buffer.str();
}

//using namespace std;

int main() {
	TextRanker textRanker;
	std::string input = loadTextFile("text.txt");
	std::vector <std::pair<int, int>> paragraphs = {
		{0, 100},
		{101, 200},
		{201, 300},
		{301, 400},
		{401, 500},
		{501, 600},
		{601, 700},
		{701, 800},
		{801, 900},
		{901, 1000}
	};
	std::vector<std::vector<std::pair<int, int>>> characters = {
		{
{327, 331},
		  {508, 512},
		  {647, 670},
		  {1559, 1585},
		  {1617, 1621},
		  {1648, 1652},
		  {1663, 1665},
		  {1687, 1689},
		  {1719, 1721},
		  {1857, 1859},
		  {1909, 1911},
		  {1941, 1943},
		  {2104, 2106},
		  {2178, 2180},
		  {2205, 2207},
		  {2652, 2656},
		  {2705, 2707},
		  {2761, 2763},
		  {2800, 2802},
		  {2870, 2872},
		  {2886, 2888},
		  {3132, 3136},
		  {3208, 3212},
		  {3229, 3231},
		  {3543, 3547},
		  {3577, 3579},
		  {3654, 3656},
		  {3701, 3703},
		  {3715, 3717},
		  {3763, 3765},
		  {3865, 3867},
		  {3894, 3896},
		  {3985, 3987},
		  {3995, 3997},
		  {4066, 4068},
		  {4150, 4154},
		  {4175, 4181},
		  {4272, 4273},
		  {4288, 4292},
		  {4550, 4551},
		  {4566, 4570},
		  {4654, 4656},
		  {4704, 4706},
		  {4829, 4831},
		  {5089, 5091},
		  {5100, 5102},
		  {5238, 5240},
		  {5254, 5256},
		  {5517, 5521},
		  {5536, 5538},
		  {5595, 5597},
		  {5607, 5609},
		  {5814, 5816},
		  {5875, 5877},
		  {5921, 5923},
		  {5935, 5937},
		  {5935, 6019},
		  {6018, 6019},
		  {6023, 6025},
		  {6035, 6041},
		  {6078, 6079},
		  {6145, 6145},
		  {6361, 6365},
		  {6393, 6395},
		  {6481, 6483},
		  {6548, 6550},
		  {6584, 6586},
		  {6676, 6678},
		  {7113, 7117},
		  {7161, 7163},
		  {7198, 7200},
		  {7306, 7308},
		  {7363, 7365},
		  {7418, 7422},
		  {7480, 7482},
		  {7506, 7507},
		  {7519, 7519},
		  {7525, 7526},
		  {7561, 7561},
		  {7701, 7702},
		  {7833, 7833},
		  {7853, 7855},
		  {7868, 7871},
		  {8021, 8025},
		  {8069, 8069},
		  {8073, 8074},
		  {8084, 8085},
		  {8141, 8143},
		  {8149, 8152},
		  {8238, 8242},
		  {8257, 8257},
		  {8325, 8326},
		  {8369, 8370},
		  {8392, 8394},
		  {8466, 8467},
		  {8489, 8489},
		  {8573, 8581},
		  {9036, 9039},
		  {9191, 9193},
		  {9219, 9221},
		  {9235, 9237},
		  {9653, 9657},
		  {9845, 9847},
		  {9859, 9861},
		  {10050, 10052},
		  {10069, 10071},
		  {10094, 10096},
		  {10154, 10155},
		  {10190, 10192},
		  {10286, 10288},
		  {10321, 10323},
		  {10407, 10409},
		  {10461, 10461},
		  {10560, 10561},
		  {10719, 10722},
		  {10873, 10876},
		  {10901, 10903},
		  {11218, 11218}
	},
{
		  {663, 670},
		  {746, 753},
		  {1486, 1489},
		  {5266, 5269},
		  {5531, 5534}
},
{
		  {756, 771},
		  {789, 790},
		  {832, 833},
		  {9526, 9533},
		  {11301, 11306}
},
{
		  {1101, 1126},
		  {1101, 1144},
		  {1447, 1479},
		  {1503, 1505},
		  {1517, 1518},
		  {1532, 1534},
		  {1894, 1896},
		  {2173, 2175},
		  {2178, 2184},
		  {2251, 2253},
		  {2378, 2380},
		  {3050, 3052},
		  {3081, 3083},
		  {3098, 3100},
		  {3421, 3423},
		  {4688, 4691},
		  {4754, 4756},
		  {5125, 5127},
		  {5144, 5146},
		  {5309, 5311},
		  {5319, 5321},
		  {5404, 5405},
		  {5483, 5484},
		  {6001, 6003},
		  {6052, 6053},
		  {6082, 6083},
		  {6341, 6343},
		  {6456, 6457},
		  {6491, 6493},
		  {6760, 6762},
		  {6790, 6791},
		  {6836, 6837},
		  {6895, 6896},
		  {6924, 6925},
		  {6994, 7003},
		  {7088, 7090},
		  {7333, 7334},
		  {7408, 7410},
		  {7460, 7462},
		  {7466, 7468},
		  {7466, 7477},
		  {7471, 7477},
		  {7616, 7618},
		  {7654, 7656},
		  {7675, 7677},
		  {7751, 7753},
		  {7776, 7778},
		  {7846, 7848},
		  {7886, 7888},
		  {7910, 7911},
		  {8035, 8037},
		  {8103, 8105},
		  {8169, 8170},
		  {8208, 8210},
		  {8264, 8266},
		  {8309, 8311},
		  {8345, 8347},
		  {8478, 8480},
		  {8509, 8511},
		  {8522, 8524},
		  {8533, 8535},
		  {8561, 8562},
		  {8573, 8575},
		  {8938, 8940},
		  {8962, 8964},
		  {9043, 9044},
		  {9059, 9060},
		  {9063, 9063},
		  {9158, 9159},
		  {9166, 9167},
		  {9243, 9244},
		  {9514, 9533},
		  {10177, 10179},
		  {10242, 10244},
		  {10263, 10265},
		  {10304, 10306},
		  {10456, 10458},
		  {10496, 10498},
		  {10563, 10566},
		  {10563, 10670},
		  {10575, 10575},
		  {10630, 10632},
		  {10668, 10670},
		  {10697, 10699},
		  {10730, 10731},
		  {10832, 10832}
},
{
		  {2492, 2524},
		  {2544, 2546},
		  {2642, 2644}
},
{
		  {2974, 3000},
		  {3011, 3014},
		  {11378, 11382},
		  {11479, 11487},
		  {11549, 11552},
		  {11577, 11580},
		  {11594, 11597}
},
{
		  {3293, 3295},
		  {3293, 3303}
},
{
		  {3332, 3351},
		  {3381, 3383},
		  {3447, 3449},
		  {3468, 3469},
		  {3491, 3493},
		  {3504, 3506}
},
{
		  {4195, 4200},
		  {4264, 4266},
		  {4296, 4296},
		  {4314, 4319},
		  {4438, 4443}
},
{
		  {4673, 4682},
		  {4813, 4822},
		  {4851, 4854}
},
{
		  {4498, 4502},
		  {6962, 6966},
		  {9548, 9552}
},
{
		  {12, 19},
		  {8824, 8831},
		  {11603, 11610}
},
{
		  {10925, 10932},
		  {11105, 11109},
		  {11031, 11034},
} };

	// לסדר שמספר הפסקאות המחולצות יהיו לפי אחוזים
	std::vector<std::string> outputs = textRanker.ExtractKeyParagraphs(input, paragraphs, characters, 25);
	std::cout << "Extracted Paragraphs:\n";
	for (const std::string& para : outputs) {
		std::cout << para << "\n\n\n\n";
	}

	return 0;
}